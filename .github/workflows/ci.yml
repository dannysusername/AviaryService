name: CI for AviaryService
on:
  push:
    branches: [ newfeature ]  # Trigger for newfeature
  pull_request:
    branches: [ main ]  # Trigger on PRs to main

#gg 

jobs:
  feature-build-and-test:
    if: github.ref != 'refs/heads/main' # For all branches other than main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history, no shallow clone

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'
      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew  # This makes gradlew runnable
      - name: Build with Gradle
        run: ./gradlew build -x test  # Now it can run
      - name: Run Unit Tests
        run: ./gradlew test  # Add unit tests for quick validation

  main-build-and-deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history, no shallow clone
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'
      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew build -x test
      - name: Deploy to Heroku Staging
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          git remote add heroku-staging https://heroku:${HEROKU_API_KEY}@git.heroku.com/aviarist-staging.git
          git push heroku-staging main